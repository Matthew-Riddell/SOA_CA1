<!-- Matthew Riddell SOA CA1 - D00245674 -->
<!-- Steam Games Page -->
@using SOA_CA1.Services
@page "/steam-games"

<PageTitle>Steam Games</PageTitle>

<h3>List of Steam Games</h3>

@if (games == null)
{
    <p>Loading games...</p>
}
else if (games.Count == 0)
{
    <p>No games found.</p>
}
else
{
    <ul>
        @foreach (var game in games)
        {
            <li>
                <!-- check if there is a valid icon, display placeholder icon for games with a missing icon -->
                @if (!string.IsNullOrEmpty(game.IconUrl))
                {
                    <img src="@($"https://media.steampowered.com/steamcommunity/public/images/apps/{game.Appid}/{game.IconUrl}.jpg")"
                         width="32" height="32" />
                }
                else
                {
                    <img src="https://cdn.discordapp.com/emojis/1288532022071001162.webp" width="32" height="32" />
                }
                <span>@game.Name</span>
                <span> - Hours Played: @((game.PlaytimeForever / 60.0).ToString("F1"))</span> <!-- Game Data -->
                <!-- <span> - Current Players: @game.CurrentPlayerCount</span> --> <!-- Player Count -->
            </li>
        }
    </ul>
}

@code {
    private List<SteamGame> games = new();

    // learned to inject in razor from:
    // https://blazor-university.com/dependency-injection/injecting-dependencies-into-blazor-components/
    [Inject] private SteamGameService SteamService { get; set; }

    // Steam Game Data
    protected override async Task OnInitializedAsync()
    {
        games = await SteamService.GetAllSteamGamesAsync();

        // Steam Player Counts (NOT WORKING!)
        // foreach (var game in games)
        // {
        //     game.CurrentPlayerCount = await SteamService.GetCurrentPlayerCountAsync(game.Appid);
        // }
    }
    
}