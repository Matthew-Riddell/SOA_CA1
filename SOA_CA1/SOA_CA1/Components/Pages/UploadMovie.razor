<!-- Matthew Riddell SOA CA1 - D00245674 -->
<!-- Movie Upload Data Page -->
@page "/upload-movie"
@using SOA_CA1.Services
@inject OmdbMovieService MovieService 
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json

<div class="content">
    <center>
    <h1>Movie Upload</h1>
    </center>

    <div class="upload-area">
        <label class="upload-label">Upload a JSON file with movie data:</label>
        <InputFile OnChange="HandleFileUpload" class="form-control-file" />
    </div>

    @if (movies != null && movies.Count > 0)
    {
        <div class="movie-list">
            <ul>
                @foreach (var movie in movies)
                {
                    <li class="movie-item">
                        <div class="card movie-details">
                            <div class="card-body">
                                <h2 class="card-title">@movie.Title (@movie.Year)</h2>
                                <p class="card-text"><strong>Genre:</strong> @movie.Genre</p>
                                <p class="card-text"><strong>Director:</strong> @movie.Director</p>
                                <p class="card-text"><strong>Actors:</strong> @movie.Actors</p>
                                <p class="card-text"><strong>Plot:</strong> @movie.Plot</p>
                                <p class="card-text"><strong>IMDB Rating:</strong> @movie.imdbRating</p>

                                @if (!string.IsNullOrEmpty(movie.Poster))
                                {
                                    <img src="@movie.Poster" alt="@movie.Title Poster" class="movie-poster" />
                                }
                                else
                                {
                                    <img src="https://cdn.discordapp.com/emojis/1288532022071001162.webp" class="movie-poster" />
                                }
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <p>No movies found. Please upload a valid JSON file.</p>
    }
</div>

@code {
    private List<Movie> movies = new List<Movie>();

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file != null)
        {
            using var stream = file.OpenReadStream(maxAllowedSize: 2 * 1024 * 1024); // 2 MB limit
            using var reader = new StreamReader(stream);
            var json = await reader.ReadToEndAsync();

            // Deserialize JSON into movie objects
            movies = JsonSerializer.Deserialize<List<Movie>>(json);
        }
    }
}