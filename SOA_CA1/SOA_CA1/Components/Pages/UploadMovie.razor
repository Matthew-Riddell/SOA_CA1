<!-- Matthew Riddell SOA CA1 - D00245674 -->
<!-- Movie Upload Data Page -->
@page "/upload-movie"
@using SOA_CA1.Services
@inject OmdbMovieService MovieService 
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json

<h3>Movie Upload</h3>

<div>
    <InputFile OnChange="HandleFileUpload" />
</div>


@if (movies != null && movies.Count > 0)
{
    <ul>
        @foreach (var movie in movies)
        {
            <li>
                <div class="movie-details">
                    <h4>@movie.Title (@movie.Year)</h4>
                    <p><strong>Genre:</strong> @movie.Genre</p>
                    <p><strong>Director:</strong> @movie.Director</p>
                    <p><strong>Actors:</strong> @movie.Actors</p>
                    <p><strong>Plot:</strong> @movie.Plot</p>
                    <p><strong>IMDB Rating:</strong> @movie.imdbRating</p>

                    <!-- check if there is a valid movie poster, display placeholder image for movies with a missing poster -->
                    @if (!string.IsNullOrEmpty(movie.Poster))
                    {
                        <img src="@movie.Poster" alt="@movie.Title Poster" width="200" />
                    }
                    else
                    {
                        <img src="https://cdn.discordapp.com/emojis/1288532022071001162.webp" width="200" />
                    }
                </div>
            </li>
        }
    </ul>
}
else
{
    <p>No movies found.</p>
}

@code {
    private List<Movie> movies = new List<Movie>();

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file != null)
        {
            using var stream = file.OpenReadStream(maxAllowedSize: 2 * 1024 * 1024); // 2 MB limit
            using var reader = new StreamReader(stream);
            var json = await reader.ReadToEndAsync();

            // Deserialize JSON into movie objects
            movies = JsonSerializer.Deserialize<List<Movie>>(json);
        }
    }
}