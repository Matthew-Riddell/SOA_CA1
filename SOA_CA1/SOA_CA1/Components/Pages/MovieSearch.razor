<!-- Matthew Riddell SOA CA1 - D00245674 -->
<!-- Movie Search Page -->

@page "/movie-search"
@using SOA_CA1.Services

<div class="content">
    <h1>Movie Search</h1>

    <div class="search-bar">
        <input @bind="searchTitle" class="form-control search-input" placeholder="Enter movie title" />
        <button @onclick="SearchMovie" class="btn btn-primary search-btn">Search</button>
    </div>

    @if (movie != null)
    {
        @if (!string.IsNullOrEmpty(movie.Title))
        {
            <div class="card movie-details">
                <div class="card-body">
                    <h2 class="card-title">@movie.Title (@movie.Year)</h2>
                    <p class="card-text"><strong>Genre:</strong> @movie.Genre</p>
                    <p class="card-text"><strong>Director:</strong> @movie.Director</p>
                    <p class="card-text"><strong>Actors:</strong> @movie.Actors</p>
                    <p class="card-text"><strong>Plot:</strong> @movie.Plot</p>
                    <p class="card-text"><strong>IMDB Rating:</strong> @movie.imdbRating</p>

                    @if (!string.IsNullOrEmpty(movie.Poster))
                    {
                        <img src="@movie.Poster" alt="@movie.Title Poster" class="movie-poster" />
                    }
                    else
                    {
                        <img src="https://cdn.discordapp.com/emojis/1288532022071001162.webp" class="movie-poster" />
                    }
                </div>
            </div>
        }
        else
        {
            <h2 class="card-title">No Movies Found!</h2>
        }

    }
    else if (isSearching)
    {
        <p>Searching for movie...</p>
    }
    else if (searchTitle != null)
    {
        <p>No movie found.</p>
    }
</div>

@code {
    private string searchTitle;
    private Movie movie;
    private bool isSearching = false;

    [Inject] private OmdbMovieService MovieService { get; set; }

    private async Task SearchMovie()
    {
        isSearching = true;
        movie = await MovieService.GetMovieByTitleAsync(searchTitle);
        isSearching = false;
    }
}
