<!-- Matthew Riddell SOA CA1 - D00245674 -->
<!-- Movie Search Page -->

@page "/movie-search"
@using SOA_CA1.Services

<h3>MovieSearch</h3>

<div>
    <input @bind="searchTitle" placeholder="Enter movie title" />
    <button @onclick="SearchMovie">Search</button>
</div>

@if (movie != null)
{
    <div class="movie-details">
        <h4>@movie.Title (@movie.Year)</h4>
        <p><strong>Genre:</strong> @movie.Genre</p>
        <p><strong>Director:</strong> @movie.Director</p>
        <p><strong>Actors:</strong> @movie.Actors</p>
        <p><strong>Plot:</strong> @movie.Plot</p>
        <p><strong>IMDB Rating:</strong> @movie.imdbRating</p>

        <!-- check if there is a valid movie poster, display placeholder image for movies with a missing poster -->
        @if (!string.IsNullOrEmpty(movie.Poster))
        {
            <img src="@movie.Poster" alt="@movie.Title Poster" width="200" />
        }
        else
        {
            <img src="https://cdn.discordapp.com/emojis/1288532022071001162.webp" width="200" />
        }
    </div>
}
else if (isSearching)
{
    <p>Searching for movie...</p>
}
else if (searchTitle != null)
{
    <p>No movie found.</p>
}

@code {
    private string searchTitle;
    private Movie movie;
    private bool isSearching = false;

    [Inject] private OmdbMovieService MovieService { get; set; }

    private async Task SearchMovie()
    {
        isSearching = true;
        movie = await MovieService.GetMovieByTitleAsync(searchTitle);
        isSearching = false;
    }
}
